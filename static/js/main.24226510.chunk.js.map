{"version":3,"sources":["assets/analog-watch.mp3","assets/school-bell.mp3","assets/ship-bell.mp3","assets/temple-bell.mp3","assets/tomato.png","assets/coffee.png","FAQ.js","Settings.js","Header.js","ClockChanger.js","Clock.js","CommentSection.js","TomatoCounter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FAQ","props","handleModalOpen","setState","modalOpen","handleModalClose","state","Button","variant","color","onClick","this","Modal","open","onClose","Fade","in","timeout","enter","className","href","target","rel","Component","Settings","onChange","event","value","setting","name","parseInt","onSubmit","preventDefault","updateSettings","restoreDefaults","defaultSettings","clearSettingsCookie","restoreCurrentClockCookie","settings","alarmOptions","alarmSounds","map","option","key","id","url","type","pomodoroTimeLengthMinutes","shortBreakTimeLengthMinutes","longBreakTimeLengthMinutes","alarmSoundUrl","alarmVolumePercent","checked","showBreaksInLog","showSkipButton","clearDaysCookie","Header","ClockChanger","changeClock","bind","pomodoroTimeLengthSeconds","shortBreakTimeLengthSeconds","longBreakTimeLengthSeconds","Clock","displayMessage","message","isRunning","timerType","startSeconds","secondsElapsed","newLength","newTimerType","passVarsUp","updateClockState","resetClock","clockState","startClock","didSkip","timeStarted","Date","timerID","setInterval","tick","stopClock","clearInterval","changeTitle","finishTimer","showTimeInTitle","document","title","fomattedTime","formatSeconds","skipToEnd","origSec","hours","Math","floor","minutes","seconds","CommentSection","submitComment","editLogComment","comment","editingComment","udpateCommentState","openCommentToEdit","commentSection","placeholder","TomatoCounter","dayId","elementId","daysArray","daysWithWork","filter","day","timeElements","length","elementsArray","forEach","element","push","isTomato","src","tomatoImg","alt","coffeeImg","style","textAlign","deleteElement","dateCompleted","some","date","App","createNewDayWithElement","newDate","newTimeElement","newDayWithWork","uuid","setDaysCookie","pushElementToExistingDay","existingDateIndex","newDaysWithWork","cookies","set","path","expires","getExpDate","createTimeElement","secondsCompleted","minutesStrt","getMinutes","toString","hoursStrt","getHours","amOrPmStrt","formattedTimeStarted","dateFin","minutesFin","hoursFin","monthFin","getMonth","dayFin","getDate","yearFin","getFullYear","amOrPmFin","formattedDateCompleted","formattedTimeCompleted","timeCompleted","startedWhen","dayToUpdate","indexOf","audio","getElementById","play","console","log","newDaysArray","newElementsArray","currentDate","year","month","returnedSettings","newClockStartSeconds","clock","setSettingsCookie","setCurrentClockCookie","setAudioVolume","volume","defaultClock","changeClockFromVars","componentDidMount","schoolBell","shipBell","templeBell","analogWatch","get","Container","maxWidth","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24226510.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/analog-watch.3fe4eb29.mp3\";","module.exports = __webpack_public_path__ + \"static/media/school-bell.05ba0837.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ship-bell.be4257c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/temple-bell.63544226.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tomato.056f42d2.png\";","module.exports = __webpack_public_path__ + \"static/media/coffee.365a24a1.png\";","import React, { Component } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\n\n\nexport default class FAQ extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalOpen: false\n        }\n    }\n\n    handleModalOpen = () => {\n        this.setState({\n            modalOpen: true\n        })\n    }\n\n    handleModalClose = () => {\n        this.setState({\n            modalOpen: false\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"outlined\" color=\"\" onClick={this.handleModalOpen}>More Info</Button>\n                <Modal open={this.state.modalOpen} onClose={this.handleModalClose} >\n                    <Fade in={this.state.modalOpen} timeout={ {enter: 500} }>\n                        <div className={'modal-window'}>\n                            <h2>Instructions and More Information</h2>\n\n                            <p>The Pomodoro Technique is a simple yet effective method of time management that aims to improve work and study habits through structured \"work\" (or \"pomodoro\") and \"break\" segments. This technique was created by Francesco Cirillo and helps keep the user on task and focused during the \"work\" segments, while giving them adequate time for rest and recouperation during the \"break\" segments. This technique helps reduce the chances of burnout and can be an effective strategy towards increasing productivity. Learn more about the Pomodoro Technique on <a href=\"https://francescocirillo.com/pages/pomodoro-technique\" target=\"_blank\" rel=\"noopener noreferrer\">Francesco Cirillo's website</a>.</p>\n\n                            <p>This application, the Tomato Tracker, provides the user with a timer that will accurately track the user's time spent during a \"pomodoro\" or break and log their completed time segments. This gives the user a sense of accomplishment and a graphical representation of their hard work! The user can also log comments to each of their time segments to see how they spent their time. This will aid when reviewing the work completed but also give the user a better ability to estimate the time needed to complete certain tasks in the future.</p>\n\n                            <p>The basics are:</p>\n                            <ol>\n                                <li>Start the \"Pomodoro\" timer and work for 25 minutes. Make an effort to avoid distractions during this time.</li>\n                                <li>Take a 5 minute break! You've earned it. Get up, stretch, meditate, grab a cup of coffee or even browse social media.</li>\n                                <li>Rinse and repeat until you have completed 4 Pomodoros.</li>\n                                <li>After completing 4 Pomodoros, take a 15 minute break. This longer break ensures that you are giving yourself enough time to rest and digest the information from your work or study sessions.</li>\n                                <li>Continue this cycle as needed!</li>\n                            </ol>\n\n                            <p>This app was inspired by:</p>\n                            <ol>\n                                <li><a href=\"https://tomato-timer.com/\" target=\"_blank\" rel=\"noopener noreferrer\">TomatoTimer</a></li>\n                                <li><a href=\"http://tomatoi.st/\" target=\"_blank\" rel=\"noopener noreferrer\">Tomatoist</a></li>\n                            </ol>\n\n                            <p>This application was built using the React Javascript framework and was done as a challenge to push myself to learn more about these technologies and to also provide myself with a useful tool for my future productivity. This application uses cookies to store the settings and Pomodoro data.</p>\n\n                            <p>Why use this app?</p>\n\n                            <p>This application gives the user an easy to use Pomodoro Timer that also allows them to track their time spent working and create detailed logs of how they spent their time.</p>\n                            \n                            <p>Features and settings include:</p>\n                            <ol>\n                                <li>Customize Pomodoro and Break times</li>\n                                <li>Pick from a selection of alarm sounds</li>\n                                <li>Adjust alarm volume</li>\n                                <li>Toggle between showing only Pomodoros or showing Pomodoros and Breaks in the log</li>\n                                <li>A \"skip to the end of the timer\" button. This is mainly used for demonstration purposes</li>\n                            </ol>\n\n                            <p>Find me on the following platforms:</p>\n                            <ul>\n                                <li><a href=\"https://mattnelson.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">My personal site</a></li>\n                                <li><a href=\"https://github.com/Matthew-Nelson\" target=\"_blank\" rel=\"noopener noreferrer\">My Github</a></li>\n                                <li><a href=\"https://www.linkedin.com/in/matthewbnelson/\" target=\"_blank\" rel=\"noopener noreferrer\">My LinkedIn</a></li>\n                            </ul>\n\n                        </div>\n                    </Fade>\n                </Modal>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\n\nexport default class Settings extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...props.settings,\n            modalOpen: false\n        };\n    }\n\n    onChange = (event) => {\n\n        var setting = event.target.name;\n        var value;\n        \n        if (parseInt(event.target.value)) {\n            value = parseInt(event.target.value);\n        } else if (event.target.value === \"false\") {\n            value = false;\n        } else if (event.target.value === \"true\") {\n            value = true;\n        } else {\n            value = event.target.value;\n        }\n        \n        this.setState({\n            [setting]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.updateSettings(this.state);\n    }\n\n    restoreDefaults = () => {\n        this.setState({\n            ...this.props.defaultSettings\n        }, () => {\n            this.props.clearSettingsCookie();\n            this.props.restoreCurrentClockCookie();\n        })\n    }\n\n    handleModalOpen = () => {\n        this.setState({\n            modalOpen: true\n        })\n    }\n\n    handleModalClose = () => {\n        this.setState({\n            modalOpen: false\n        })\n    };\n\n    render() {\n\n        var alarmOptions = this.props.alarmSounds.map((option) => {\n            return <option key={option.id} value={option.url}>{option.name}</option>\n        })\n\n        return (\n            <div>\n                <Button variant=\"outlined\" color=\"\" onClick={this.handleModalOpen}>Settings</Button>\n                <Modal open={this.state.modalOpen} onClose={this.handleModalClose}>\n                    <Fade in={this.state.modalOpen} timeout={ {enter: 500} }>\n                    <div className={\"modal-window\"}>\n                        <form onSubmit={this.onSubmit} id=\"settings\" >\n                            <p><strong>Custom Timer Times</strong></p>\n                            <div>\n                                <p>Pomodoro Time:</p>\n                                <input type=\"number\" name=\"pomodoroTimeLengthMinutes\" value={this.state.pomodoroTimeLengthMinutes} onChange={this.onChange} />\n                                <p>Short Break Time:</p>\n                                <input type=\"number\" name=\"shortBreakTimeLengthMinutes\" value={this.state.shortBreakTimeLengthMinutes} onChange={this.onChange}/>\n                                <p>Long Break Time:</p>\n                                <input type=\"number\" name=\"longBreakTimeLengthMinutes\" value={this.state.longBreakTimeLengthMinutes} onChange={this.onChange}/>\n                            </div>\n                            <p>---</p>\n                            <p><strong>Sound Picker</strong></p>\n                            <select name=\"alarmSoundUrl\" onChange={this.onChange} value={this.state.alarmSoundUrl}>\n                                {alarmOptions}\n                            </select>\n                            <p>---</p>\n                            <p><strong>Adjust Volume</strong></p>\n                            <select name=\"alarmVolumePercent\" onChange={this.onChange} value={this.state.alarmVolumePercent}>\n                                <option value=\"100\">100%</option>\n                                <option value=\"75\">75%</option>\n                                <option value=\"50\">50%</option>\n                                <option value=\"25\">25%</option>\n                                <option value=\"0\">0%</option>\n                            </select>\n                            <p>---</p>\n                            \n                            <div>\n                               <p>Show breaks in log</p>\n                                <label>\n                                    <input\n                                    type=\"radio\"\n                                    name=\"showBreaksInLog\"\n                                    value={true}\n                                    checked={this.state.showBreaksInLog}\n                                    onChange={this.onChange}\n                                    />\n                                        Yes\n                                </label>\n                                <label>\n                                    <input\n                                    type=\"radio\"\n                                    name=\"showBreaksInLog\"\n                                    value={false}\n                                    checked={!this.state.showBreaksInLog}\n                                    onChange={this.onChange}\n                                    />\n                                        No\n                                </label>\n                            </div>\n                            \n                            <p>---</p>\n\n                            <div>\n                                <p>Would you like to have the option to skip to the end of the timer? This should mainly be used for demonstration purposes. Checking 'Yes' will reveal a button upon naviagting back to the timer.</p>\n                                <label>\n                                    <input\n                                    type=\"radio\"\n                                    name=\"showSkipButton\"\n                                    value={true}\n                                    checked={this.state.showSkipButton}\n                                    onChange={this.onChange}\n                                    />\n                                        Yes\n                                </label>\n                                <label>\n                                    <input\n                                    type=\"radio\"\n                                    name=\"showSkipButton\"\n                                    value={false}\n                                    checked={!this.state.showSkipButton}\n                                    onChange={this.onChange}\n                                    />\n                                        No\n                                </label>\n                            </div>\n\n                            <p>---</p>\n                            <button type=\"submit\" value=\"submit\">Save Settings</button>\n                            <p>---</p>\n                        </form>\n                        <button onClick={this.restoreDefaults}>Restore Defaults</button>\n                        <button onClick={this.props.clearDaysCookie}>Clear Entire Log</button>\n                    </div>\n                </Fade>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport FAQ from './FAQ.js';\nimport Settings from './Settings.js';\n\nexport default function Header(props) {\n    return (\n        <div className={\"header\"}>\n            <h1>Tomato Tracker</h1>\n            <div className={\"header-buttons\"}>\n                <FAQ />\n                <Settings alarmSounds={props.alarmSounds} defaultSettings={props.defaultSettings} settings={props.settings} updateSettings={props.updateSettings} clearSettingsCookie={props.clearSettingsCookie} restoreCurrentClockCookie={props.restoreCurrentClockCookie} clearDaysCookie={props.clearDaysCookie}/>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default class ClockChanger extends Component {\n\n    render() {\n\n        return (\n            <div className={\"clock-changer\"}>\n                <Button variant=\"outlined\" color=\"\" onClick={this.props.changeClock.bind(this, this.props.pomodoroTimeLengthSeconds, 'pomodoro')}>Pomodoro</Button>\n                <Button variant=\"outlined\" color=\"\" onClick={this.props.changeClock.bind(this, this.props.shortBreakTimeLengthSeconds, 'short-break')}>Short Break</Button>\n                <Button variant=\"outlined\" color=\"\" onClick={this.props.changeClock.bind(this, this.props.longBreakTimeLengthSeconds, 'long-break')}>Long Break</Button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport ClockChanger from './ClockChanger.js';\nimport Button from '@material-ui/core/Button';\n\nexport default class Clock extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRunning: false,\n            secondsElapsed: 0,\n            timeStarted: {}\n        };\n    }\n\n    displayMessage = () => {\n        \n        var message = \"\";\n        if (this.state.isRunning === false && this.props.timerType === 'pomodoro' && this.props.startSeconds !== this.state.secondsElapsed) {\n            message = \"Start the clock and get to work!\";\n        } else if (this.state.isRunning === false && this.props.timerType === 'pomodoro' && this.props.startSeconds === this.state.secondsElapsed) {\n            message = \"Good job! You made it to the break. Select whether you are going to take another break.\"\n        } else if (this.state.isRunning === true && this.props.timerType === 'pomodoro') {\n            message = \"You're on the clock, keep focused on the task at hand!\"\n        } else if (this.state.isRunning === false && this.props.timerType !== 'pomodoro' && this.props.startSeconds !== this.state.secondsElapsed) {\n            message = \"Start the clock and take your well earned break!\"\n        } else if (this.state.isRunning === false && this.props.timerType !== 'pomodoro' && this.props.startSeconds === this.state.secondsElapsed) {\n            message = \"Select whether you are headed back to a 'pomodoro' or if you want to take a longer break.\"\n        } else if (this.state.isRunning === true && this.props.timerType !== 'pomodoro') {\n            message = \"You're on your break. Get up, stretch, grab a snack or water if needed and relax!\"\n        }\n\n        return <h3>{message}</h3>\n    }\n\n    changeClock = (newLength, newTimerType) => {\n        this.props.passVarsUp(newLength, newTimerType);\n        this.updateClockState(false);\n        this.resetClock();\n    }\n\n    updateClockState = (clockState) => {\n        this.setState({\n            isRunning: clockState\n        })\n    }\n        \n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n\n    startClock = (didSkip) => {\n        \n        if (!this.state.isRunning) {\n            \n            if (this.props.startSeconds === this.state.secondsElapsed) {\n                this.resetClock();\n            }\n\n            if (this.state.secondsElapsed === 0 || this.state.secondsElapsed - this.props.startSeconds === 0 || didSkip) {\n                this.setState({\n                    timeStarted: new Date()\n                })\n            }\n            \n            this.updateClockState(true);\n            this.timerID = setInterval(\n                () => this.tick(),\n                1000\n            );\n        }\n\n    }\n\n    stopClock = () => {\n        this.updateClockState(false);\n        clearInterval(this.timerID);\n    }\n\n    resetClock = () => {\n        this.stopClock();\n        this.changeTitle(false);\n        this.setState({\n            secondsElapsed: 0,\n            timeStarted: {}\n        });\n    }\n\n    tick = () => {\n        this.setState({\n            secondsElapsed: (this.state.secondsElapsed + 1)\n        })\n\n        this.changeTitle(true);\n\n        if (this.state.secondsElapsed === this.props.startSeconds) {\n            this.stopClock();\n            this.props.finishTimer(this.props.timerType, this.props.startSeconds, this.state.timeStarted);\n        }\n    }\n\n    changeTitle = (showTimeInTitle) => {\n        var title = 'Pomodoro';\n\n        if (showTimeInTitle === false) {\n            document.title = title;\n        } else {\n            var fomattedTime = this.formatSeconds(this.props.startSeconds - this.state.secondsElapsed);\n            document.title = `${title} (${fomattedTime})`;\n        }\n    }\n\n    skipToEnd = () => {\n        this.setState({\n            secondsElapsed: (this.props.startSeconds - 2),\n        }, () => {\n            if (!this.state.isRunning)\n                this.startClock(true)\n        })\n    }\n\n    formatSeconds = (origSec) => {\n        var hours   = Math.floor(origSec / 3600);\n        var minutes = Math.floor((origSec - (hours * 3600)) / 60);\n        var seconds = origSec - (hours * 3600) - (minutes * 60);\n\n        if (hours < 10) {\n            hours = `0${hours}:`\n            if (hours === '00:') {\n                hours = '';\n            }\n        }\n        if (minutes < 10) {\n            minutes = `0${minutes}`;\n        }\n        if (seconds < 10) {\n            seconds = `0${seconds}`;\n        }\n        return `${hours}${minutes}:${seconds}`;\n    }\n    \n\n    render() {\n\n        var skipToEnd;\n        if (this.props.showSkipButton) {\n            skipToEnd = \n                <div className={\"skip-to-end\"}>\n                    <p>For demonstration purposes, feel free to skip to the end of the timer</p>\n                    <Button variant=\"outlined\" color=\"\" onClick={this.skipToEnd}>Skip to end of Timer</Button>\n                </div>\n        }\n\n        return (\n            <div className={\"clock-container\"}>\n                \n                <ClockChanger changeClock={this.changeClock} pomodoroTimeLengthSeconds={this.props.pomodoroTimeLengthSeconds} shortBreakTimeLengthSeconds={this.props.shortBreakTimeLengthSeconds} longBreakTimeLengthSeconds={this.props.longBreakTimeLengthSeconds}/>\n                \n                \n\n                <h2 id={\"clock\"}>{this.formatSeconds(this.props.startSeconds - this.state.secondsElapsed)}</h2>\n                \n                <div className={\"clock-controls\"}>\n                    <Button variant=\"outlined\" color=\"\" onClick={this.startClock}>Start</Button>\n                    <Button variant=\"outlined\" color=\"\" onClick={this.stopClock}>Stop</Button>\n                    <Button variant=\"outlined\" color=\"\" onClick={this.resetClock}>Reset</Button>\n                </div>\n\n                {this.displayMessage()}\n\n                {skipToEnd}\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class CommentSection extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editingComment: this.props.editingComment,\n            comment: this.props.comment\n        }\n    }\n\n    submitComment = () => {\n        this.props.editLogComment(this.state.comment);\n        this.setState({\n            editingComment: false\n        });\n    }\n\n    udpateCommentState = (event) => {\n        this.setState({\n            comment: event.target.value\n        })\n    }\n\n    openCommentToEdit = () => {\n        this.setState({\n            editingComment: true\n        })\n    }\n\n    render() {\n\n        var commentSection;\n        if (this.state.editingComment === true) {\n            commentSection = \n            <div>\n                <textarea placeholder={'add comments about how you spent your time'} value={this.state.comment} onChange={this.udpateCommentState}></textarea>\n                <button onClick={this.submitComment}>Submit</button>\n            </div>\n        } else {\n            commentSection = \n            <div>\n                <p>Comment:</p>\n                <p>{this.props.comment}</p>\n                <button onClick={this.openCommentToEdit}>Edit Comment</button>\n            </div>\n        }\n\n        return (\n            <div>\n                {commentSection}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport CommentSection from './CommentSection.js';\nimport tomatoImg from './assets/tomato.png';\nimport coffeeImg from './assets/coffee.png';\n\nexport default class TomatoCounter extends Component {\n\n    editLogComment = (dayId, elementId, comment) => {\n        this.props.editLogComment(dayId, elementId, comment);\n    }\n\n    render() {\n\n\n        var filterDays = this.props.daysWithWork.filter( (day) => {\n            return day.timeElements.length > 0;\n        })\n\n        \n        var daysArray = filterDays.map( (day) => {\n\n            var elementsArray = []\n\n            day.timeElements.forEach( (element) => {\n                elementsArray.push(\n                    <div className={`single-element-wrapper ${element.isTomato ? 'tomato' : 'break'} ${!element.isTomato && !this.props.showBreaksInLog ? 'hide-element' : 'show-element'}`} key={element.id}>\n                        \n                        <div className={`time-element ${element.isTomato ? 'tomato' : 'break'}`}>\n                            <img src={tomatoImg} className={'tomato-image'} alt=\"Tomato Icon\"/>\n                            <img src={coffeeImg} className={'coffee-image'} alt=\"Coffee Icon\"/>\n                            <div className={\"element-pop-up\"}>\n                                <div>\n                                    <p style={{textAlign: 'center'}}>{element.minutes}<br/>\n                                    minutes\n                                    </p>\n                                </div>\n                                <div>\n                                    <button onClick={this.props.deleteElement.bind(this, day.id, element.id)} className=\"rm-button\">Delete Element</button>\n                                </div>\n                                <div className=\"log-info\">\n                                    <p>Time Started: {element.timeStarted}</p>\n                                    <p>Time Completed: {element.timeStarted}</p>\n                                    <p>Date Completed: {element.dateCompleted}</p>\n                                </div>\n                                <div>\n                                    <CommentSection comment={element.comment} editingComment={element.editingComment} editLogComment={this.editLogComment.bind(this, day.id, element.id)}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n\n            return (\n                <div className={`day ${(day.timeElements.some( (element) => element.isTomato) ) ? 'has-tomatoes' : 'no-tomatoes'} ${( this.props.showBreaksInLog ) ? 'show-breaks' : 'hide-breaks'}`} key={day.id}>\n                    <h3 className={'date'}>{day.date}</h3>\n                    {elementsArray}\n                </div>\n            )\n        })\n\n        return (\n\n            <div>\n                <h2>Pomodoros Log</h2>\n                <div>\n                    {daysArray}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Header from './Header.js';\nimport Clock from './Clock.js';\nimport TomatoCounter from './TomatoCounter.js';\nimport Container from '@material-ui/core/Container';\nimport uuid from 'uuid';\nimport { analogWatch, schoolBell, shipBell, templeBell } from './assets/alarm-sounds.js';\nimport { withCookies } from 'react-cookie';\n\nimport './styles/css/main.css';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    const { cookies } = props;\n\n    this.alarmSounds = [\n      {\n        name: 'School Bell',\n        url: schoolBell,\n        id: uuid()\n      },\n      {\n        name: 'Ship Bell',\n        url: shipBell,\n        id: uuid()\n      },\n      {\n        name: 'Temple Bell',\n        url: templeBell,\n        id: uuid()\n      },\n      {\n        name: 'Analog Watch',\n        url: analogWatch,\n        id: uuid()\n      }\n    ]\n\n    this.defaultSettings = {\n      pomodoroTimeLengthMinutes: 25,\n      longBreakTimeLengthMinutes: 15,\n      shortBreakTimeLengthMinutes: 5,\n\n      alarmSoundUrl: 'tomato-tracker/static/media/ship-bell.be4257c1.mp3',\n      alarmVolumePercent: 100,\n\n      showBreaksInLog: false,\n      showSkipButton: false\n    }\n\n    this.defaultClock = {\n      startSeconds: (this.defaultSettings.pomodoroTimeLengthMinutes * 60),\n      timerType: 'pomodoro'\n    }\n\n    this.state = {\n      settings: cookies.get('settings') || {\n        ...this.defaultSettings\n      },\n      clock: cookies.get('currentClockState') || {\n        ...this.defaultClock\n      },\n      daysWithWork: cookies.get('daysWithWork') || []\n    }\n  }\n\n  createNewDayWithElement = (newDate, newTimeElement) => {\n    var newDayWithWork = {\n      date: newDate,\n      id: uuid(),\n      timeElements: [\n        newTimeElement\n      ]\n    }\n    this.setState({\n      daysWithWork: [newDayWithWork, ...this.state.daysWithWork]\n    }, () => {\n      this.setDaysCookie();\n    })\n  }\n\n  pushElementToExistingDay = (existingDateIndex, newTimeElement) => {\n    var newDaysWithWork = [...this.state.daysWithWork];\n    newDaysWithWork[existingDateIndex].timeElements.push(newTimeElement);\n    this.setState({\n      daysWithWork: [...newDaysWithWork]\n    }, () => {\n      this.setDaysCookie();\n    })\n  }\n\n  setDaysCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('daysWithWork', this.state.daysWithWork, { path: '/tomato-tracker/', expires: this.getExpDate()});\n  }\n\n  clearDaysCookie = () => {\n    this.setState({\n      daysWithWork: []\n    }, () => {\n      this.setDaysCookie();\n    })\n  }\n\n  createTimeElement = (timerType, secondsCompleted, timeStarted) => {\n    // formatting time started\n    var minutesStrt = timeStarted.getMinutes();\n    if (minutesStrt.toString().length === 1) {\n      minutesStrt = `0${minutesStrt}`;\n    }\n    var hoursStrt = timeStarted.getHours();\n\n    var amOrPmStrt = \"\";\n    if (hoursStrt > 12) {\n      hoursStrt = hoursStrt-12;\n      amOrPmStrt = \"PM\";\n    } else if (hoursStrt < 12) {\n      amOrPmStrt = \"AM\";\n    } else if (hoursStrt === 12 ) {\n      amOrPmStrt = \"PM\";\n    }\n\n    var formattedTimeStarted = `${hoursStrt}:${minutesStrt} ${amOrPmStrt}`;\n\n    // formatting time and date completed\n    var dateFin = new Date();\n    var minutesFin = dateFin.getMinutes();\n    if (minutesFin.toString().length === 1) {\n      minutesFin = `0${minutesFin}`;\n    }\n    var hoursFin = dateFin.getHours();\n    var monthFin = dateFin.getMonth() + 1;\n    var dayFin = dateFin.getDate();\n    var yearFin = dateFin.getFullYear();\n\n    var amOrPmFin = \"\";\n    if (hoursFin > 12) {\n      hoursFin = hoursFin-12;\n      amOrPmFin = \"PM\";\n    } else if (hoursFin < 12) {\n      amOrPmFin = \"AM\";\n    } else if (hoursFin === 12 ) {\n      amOrPmFin = \"PM\";\n    }\n\n    var formattedDateCompleted = `${monthFin}/${dayFin}/${yearFin}`;\n    var formattedTimeCompleted = `${hoursFin}:${minutesFin} ${amOrPmFin}`;\n\n\n    var newTimeElement = {\n      isTomato: (timerType === 'pomodoro'),\n      minutes: (secondsCompleted / 60),\n      id: uuid(),\n      comment: \"\",\n      editingComment: true,\n      timeStarted: formattedTimeStarted,\n      timeCompleted: formattedTimeCompleted,\n      dateCompleted: formattedDateCompleted\n    }\n    return newTimeElement;\n  }\n\n  finishTimer = (timerType, secondsCompleted, startedWhen) => {\n\n    var newTimeElement = this.createTimeElement(timerType, secondsCompleted, startedWhen);\n\n    var dayToUpdate = {};\n    if (this.state.daysWithWork.some( (day) => {\n      dayToUpdate = day;\n      return day.date === newTimeElement.dateCompleted;\n    })) {\n      this.pushElementToExistingDay(this.state.daysWithWork.indexOf(dayToUpdate), newTimeElement);\n    } else {\n      this.createNewDayWithElement(newTimeElement.dateCompleted, newTimeElement);\n    }\n    \n    var audio = document.getElementById(\"alarm-audio\");\n    if (audio) {\n      audio.play();\n      console.log(audio);\n    } else {\n      console.log('audio not loaded?');\n      console.log(audio);\n    }\n    \n\n  }\n\n  deleteElement = (dayId, elementId) => {\n\n    var newDaysArray = this.state.daysWithWork;\n    newDaysArray.forEach( (day) => {\n      if (day.id === dayId) {\n        var newElementsArray = day.timeElements.filter( (element) => {\n          return element.id !== elementId;\n        })\n        day.timeElements = newElementsArray;\n      }\n    });\n\n    this.setState({\n      daysWithWork: [...newDaysArray]\n    }, () => {\n      this.setDaysCookie();\n    })  \n  }\n\n  getExpDate = () => {\n    var currentDate = new Date();\n    var year = currentDate.getFullYear()\n    var month = currentDate.getMonth()\n    var day = currentDate.getDate();\n    var hours = currentDate.getHours();\n    var minutes = currentDate.getMinutes();\n    var expDate = new Date(year, month + 1, day, hours, minutes)\n    return expDate;\n  }\n\n\n  updateSettings = (returnedSettings) => {\n    var newClockStartSeconds;\n    if (this.state.clock.timerType === 'pomodoro') {\n      newClockStartSeconds = returnedSettings.pomodoroTimeLengthMinutes*60;\n    } else if (this.state.clock.timerType === 'short-break') {\n      newClockStartSeconds = returnedSettings.shortBreakTimeLengthMinutes*60;\n    } else if (this.state.clock.timerType === 'long-break') {\n      newClockStartSeconds = returnedSettings.longBreakTimeLengthMinutes*60;\n    }\n\n    this.setState({\n      settings: {\n        ...returnedSettings\n      },\n      clock: {\n        startSeconds: newClockStartSeconds,\n        timerType: this.state.clock.timerType\n      }\n    }, () => {\n      this.setSettingsCookie();\n      this.setCurrentClockCookie();\n      this.setAudioVolume();\n    })\n  }\n\n  setAudioVolume = () => {\n    var audio = document.getElementById(\"alarm-audio\");\n    audio.volume = this.state.settings.alarmVolumePercent/100;\n  }\n\n  setCurrentClockCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('currentClockState', this.state.clock, { path: '/tomato-tracker/', expires: this.getExpDate()})\n  }\n\n  setSettingsCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('settings', this.state.settings, { path: '/tomato-tracker/', expires: this.getExpDate()});\n  }\n\n  clearSettingsCookie = () => {\n    this.setState({\n      settings: {\n        ...this.defaultSettings\n      }\n    }, () => {\n      this.setSettingsCookie();\n    })\n  }\n\n  restoreCurrentClockCookie = () => {\n    this.setState({\n      clock: {\n        ...this.defaultClock\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n    })\n  }\n\n  changeClockFromVars = (newLength, timerType) => {\n    this.setState({\n      clock: {\n        startSeconds: newLength,\n        timerType: timerType\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n    })\n  }\n\n  editLogComment = (dayId, elementId, comment) => {\n\n    var newDaysArray = this.state.daysWithWork;\n    newDaysArray.forEach( (day) => {\n      if (day.id === dayId) {\n        day.timeElements.forEach( (element) => {\n          if (element.id === elementId) {\n            element.comment = comment;\n            element.editingComment = false;\n          }\n        })\n      }\n    });\n\n    this.setState({\n      daysWithWork: [...newDaysArray]\n    }, () => {\n      this.setDaysCookie();\n    })  \n\n  }\n\n  componentDidMount = () => {\n\n    this.setState({\n      clock: {\n        startSeconds: this.state.settings.pomodoroTimeLengthMinutes*60,\n        timerType: 'pomodoro'\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n      this.setAudioVolume();\n    })\n\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Container className=\"app-container\" maxWidth=\"md\">\n            <Header alarmSounds={this.alarmSounds} defaultSettings={this.defaultSettings} settings={this.state.settings} updateSettings={this.updateSettings} clearSettingsCookie={this.clearSettingsCookie} restoreCurrentClockCookie={this.restoreCurrentClockCookie} clearDaysCookie={this.clearDaysCookie}/>\n            <hr/>\n            <Clock startSeconds={this.state.clock.startSeconds} timerType={this.state.clock.timerType} passVarsUp={this.changeClockFromVars} finishTimer={this.finishTimer} pomodoroTimeLengthSeconds={this.state.settings.pomodoroTimeLengthMinutes*60} shortBreakTimeLengthSeconds={this.state.settings.shortBreakTimeLengthMinutes*60} longBreakTimeLengthSeconds={this.state.settings.longBreakTimeLengthMinutes*60} showSkipButton={this.state.settings.showSkipButton}/>\n            <hr/>\n            <TomatoCounter daysWithWork={this.state.daysWithWork} deleteElement={this.deleteElement} editLogComment={this.editLogComment} showBreaksInLog={this.state.settings.showBreaksInLog}/>\n          </Container>\n        </header>\n        <audio id=\"alarm-audio\" src={this.state.settings.alarmSoundUrl} type=\"audio/mpeg\" />\n      </div>\n    )\n  }\n}\n\nexport default withCookies(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n    <CookiesProvider>\n        <App />\n    </CookiesProvider>\n    \n, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}