{"version":3,"sources":["assets/analog-watch.mp3","assets/school-bell.mp3","assets/ship-bell.mp3","assets/temple-bell.mp3","Header.js","ClockChanger.js","Clock.js","TomatoCounter.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","style","borderColor","ClockChanger","onClick","this","changeClock","bind","pomodoroTimeLengthSeconds","shortBreakTimeLengthSeconds","longBreakTimeLengthSeconds","Component","Clock","displayMessage","message","state","isRunning","timerType","startSeconds","secondsElapsed","newLength","newTimerType","passVarsUp","updateClockState","resetClock","clockState","setState","startClock","timerID","setInterval","tick","stopClock","clearInterval","changeTitle","finishTimer","showTimeInTitle","document","title","fomattedTime","formatSeconds","skipToEnd","origSec","hours","Math","floor","minutes","seconds","clockStyle","demonstrationStyle","marginTop","display","padding","border","margin","TomatoCounter","tomatoCount","breakCount","index","timeElements","length","isTomato","elementsArray","map","element","key","id","className","deleteElement","textAlign","clearElementsCookie","Settings","onChange","event","value","setting","target","name","parseInt","onSubmit","preventDefault","updateSettings","restoreDefaults","defaultSettings","clearSettingsCookie","restoreCurrentClockCookie","settings","alarmOptions","alarmSounds","option","url","type","pomodoroTimeLengthMinutes","shortBreakTimeLengthMinutes","longBreakTimeLengthMinutes","alarmSoundUrl","alarmVolumePercent","App","secondsCompleted","newTimeElement","uuid","setElementsCookie","getElementById","play","newArray","filter","getExpDate","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","getHours","getMinutes","cookies","set","path","expires","returnedSettings","newClockStartSeconds","clock","setSettingsCookie","setCurrentClockCookie","defaultClock","changeClockFromVars","componentDidMount","volume","schoolBell","shipBell","templeBell","analogWatch","browserNotification","autoStartSegments","logViewPomodorosOnly","logListView","logDescendingList","get","src","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5e0249b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/analog-watch.3fe4eb29.mp3\";","module.exports = __webpack_public_path__ + \"static/media/school-bell.05ba0837.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ship-bell.be4257c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/temple-bell.63544226.mp3\";","import React from 'react';\n\nexport default function Header(props) {\n    return (\n        <div>\n            <h1>Tomato Timer</h1>\n            <hr style={{borderColor: 'dodgerblue'}}/>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class ClockChanger extends Component {\n\n    render() {\n\n        return (\n            <div>\n                <button onClick={this.props.changeClock.bind(this, this.props.pomodoroTimeLengthSeconds, 'pomodoro')}>Pomodoro</button>\n                <button onClick={this.props.changeClock.bind(this, this.props.shortBreakTimeLengthSeconds, 'short-break')}>Short Break</button>\n                <button onClick={this.props.changeClock.bind(this, this.props.longBreakTimeLengthSeconds, 'long-break')}>Long Break</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport ClockChanger from './ClockChanger.js';\n\nexport default class Clock extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRunning: false,\n            secondsElapsed: 0\n        };\n    }\n\n    displayMessage = () => {\n        \n        var message = \"\";\n        if (this.state.isRunning === false && this.props.timerType === 'pomodoro' && this.props.startSeconds !== this.state.secondsElapsed) {\n            message = \"Start the clock and get to work!\";\n        } else if (this.state.isRunning === false && this.props.timerType === 'pomodoro' && this.props.startSeconds === this.state.secondsElapsed) {\n            message = \"Good job! You made it to the break. Select whether you are going to take a short or long break.\"\n        } else if (this.state.isRunning === true && this.props.timerType === 'pomodoro') {\n            message = \"You're on the clock, keep focused on the task at hand!\"\n        } else if (this.state.isRunning === false && this.props.timerType !== 'pomodoro' && this.props.startSeconds !== this.state.secondsElapsed) {\n            message = \"Start the clock and take your well earned break!\"\n        } else if (this.state.isRunning === false && this.props.timerType !== 'pomodoro' && this.props.startSeconds === this.state.secondsElapsed) {\n            message = \"Select whether you are headed back to a 'pomodoro' or if you want to take a longer break.\"\n        } else if (this.state.isRunning === true && this.props.timerType !== 'pomodoro') {\n            message = \"You're on your break. Get up, stretch, grab a snack or water if needed and relax!\"\n        }\n\n        return <p>{message}</p>\n    }\n\n    changeClock = (newLength, newTimerType) => {\n\n        this.props.passVarsUp(newLength, newTimerType);\n        \n        this.updateClockState(false);\n        \n        this.resetClock();\n\n    }\n\n    updateClockState = (clockState) => {\n        this.setState({\n            isRunning: clockState\n        })\n    }\n        \n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n\n    startClock = () => {\n        \n        if (!this.state.isRunning) {\n            if (this.props.startSeconds === this.state.secondsElapsed) {\n                this.resetClock();\n            }\n            this.updateClockState(true);\n            this.timerID = setInterval(\n                () => this.tick(),\n                1000\n            );\n        }\n\n    }\n\n    stopClock = () => {\n        this.updateClockState(false);\n        clearInterval(this.timerID);\n    }\n\n    resetClock = () => {\n        this.stopClock();\n        this.changeTitle(false);\n        this.setState({\n            secondsElapsed: 0\n        });\n    }\n\n    tick = () => {\n        this.setState({\n            secondsElapsed: (this.state.secondsElapsed + 1)\n        })\n\n        this.changeTitle(true);\n\n        if (this.state.secondsElapsed === this.props.startSeconds) {\n            this.stopClock();\n            this.props.finishTimer(this.props.timerType, this.props.startSeconds);\n        }\n    }\n\n    changeTitle = (showTimeInTitle) => {\n        var title = 'Pomodoro';\n\n        if (showTimeInTitle === false) {\n            document.title = title;\n        } else {\n            var fomattedTime = this.formatSeconds(this.props.startSeconds - this.state.secondsElapsed);\n            document.title = `${title} (${fomattedTime})`;\n        }\n    }\n\n    skipToEnd = () => {\n        this.setState({\n            secondsElapsed: (this.props.startSeconds - 4)\n        }, () => {\n            if (!this.state.isRunning)\n                this.startClock()\n        })\n    }\n\n    formatSeconds = (origSec) => {\n        var hours   = Math.floor(origSec / 3600);\n        var minutes = Math.floor((origSec - (hours * 3600)) / 60);\n        var seconds = origSec - (hours * 3600) - (minutes * 60);\n\n        if (hours < 10) {\n            hours = `0${hours}:`\n            if (hours === '00:') {\n                hours = '';\n            }\n        }\n        if (minutes < 10) {\n            minutes = `0${minutes}`;\n        }\n        if (seconds < 10) {\n            seconds = `0${seconds}`;\n        }\n        return `${hours}${minutes}:${seconds}`;\n    }\n    \n\n    render() {\n\n        return (\n            <div>\n                {this.displayMessage()}\n                \n                <ClockChanger changeClock={this.changeClock} pomodoroTimeLengthSeconds={this.props.pomodoroTimeLengthSeconds} shortBreakTimeLengthSeconds={this.props.shortBreakTimeLengthSeconds} longBreakTimeLengthSeconds={this.props.longBreakTimeLengthSeconds}/>\n                \n                \n\n                <h2 style={clockStyle}>{this.formatSeconds(this.props.startSeconds - this.state.secondsElapsed)}</h2>\n                \n                <div>\n                    <button onClick={this.startClock}>Start</button>\n                    <button onClick={this.stopClock}>Stop</button>\n                    <button onClick={this.resetClock}>Reset</button>\n                </div>\n\n                <div style={demonstrationStyle}>\n                    <p style={{marginTop: 0}}>For demonstration purposes, feel free to skip to the end of the timer:</p>\n                    <button onClick={this.skipToEnd}>Skip to end of Timer</button>\n                </div>\n                \n\n            </div>\n        )\n    }\n}\n\nconst clockStyle = {\n    display: 'inline-block',\n    padding: '1rem',\n    border: '1px solid red'\n}\n\nconst demonstrationStyle = {\n    border: '1px dotted grey',\n    padding: '1rem',\n    margin: '1rem 0'\n}","import React, { Component } from 'react'\n\nexport default class TomatoCounter extends Component {\n    render() {\n\n        var tomatoCount = 0;\n        var breakCount = 0;\n        for (let index = 0; index < this.props.timeElements.length; index++) {\n            if (this.props.timeElements[index].isTomato) {\n                tomatoCount++\n            } else {\n                breakCount++\n            }\n        }\n\n        var elementsArray = this.props.timeElements.map((element) => {\n            return (\n                <div key={element.id} className={`time-element ${element.isTomato ? 'tomato' : 'break'}`}>\n                    <button onClick={this.props.deleteElement.bind(this, element.id)} className=\"rm-button\">x</button>\n                    <div>\n                        <p style={{textAlign: 'center'}}>{element.minutes}<br/>\n                        minutes\n                        </p>\n                    </div>\n                </div>\n            )\n        })\n\n        return (\n\n            <div>\n                <h2>Completed Time Segments</h2>\n                <p>This section acts as a log of the pomodoros and break that you have completed.</p>\n                <p>So far, you have {tomatoCount} tomatoes completed and have taken {breakCount} beaks.</p>\n                <div className=\"time-elements-wrapper\">\n                    {elementsArray}\n                </div>\n                <button onClick={this.props.clearElementsCookie}>Clear Log</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...props.settings\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange = (event) => {\n\n        var setting = event.target.name;\n        var value;\n        \n        if (parseInt(event.target.value)) {\n            value = parseInt(event.target.value);\n        } else {\n            value = event.target.value;\n        }\n\n        this.setState({\n            [setting]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.updateSettings(this.state);\n    }\n\n    restoreDefaults = () => {\n        this.setState({\n            ...this.props.defaultSettings\n        }, () => {\n            this.props.clearSettingsCookie();\n            this.props.restoreCurrentClockCookie();\n        })\n    }\n\n\n\n    render() {\n\n        var alarmOptions = this.props.alarmSounds.map((option) => {\n            return <option key={option.id} value={option.url}>{option.name}</option>\n        })\n\n        return (\n            <div>\n                <h2>SETTINGS</h2>\n                <form onSubmit={this.onSubmit} id=\"settings\" >\n                    <p><strong>Custom Timer Times</strong></p>\n                    <div>\n                        <p>Pomodoro Time:</p>\n                        <input type=\"number\" name=\"pomodoroTimeLengthMinutes\" value={this.state.pomodoroTimeLengthMinutes} onChange={this.onChange} />\n                        <p>Short Break Time:</p>\n                        <input type=\"number\" name=\"shortBreakTimeLengthMinutes\" value={this.state.shortBreakTimeLengthMinutes} onChange={this.onChange}/>\n                        <p>Long Break Time:</p>\n                        <input type=\"number\" name=\"longBreakTimeLengthMinutes\" value={this.state.longBreakTimeLengthMinutes} onChange={this.onChange}/>\n                    </div>\n                    <p>---</p>\n                    <p><strong>Sound Picker</strong></p>\n                    <select name=\"alarmSoundUrl\" onChange={this.onChange} value={this.state.alarmSoundUrl}>\n                        {alarmOptions}\n                    </select>\n                    <p>---</p>\n                    <p><strong>Adjust Volume</strong></p>\n                    <select name=\"alarmVolumePercent\" onChange={this.onChange} value={this.state.alarmVolumePercent}>\n                        <option value=\"100\">100%</option>\n                        <option value=\"75\">75%</option>\n                        <option value=\"50\">50%</option>\n                        <option value=\"25\">25%</option>\n                    </select>\n                    <p>---</p>\n                    <p><strong>Browser Notification</strong></p>\n                    <p>---</p>\n                    <p><strong>Auto Start Pomodoros and Breaks</strong></p>\n                    <p>---</p>\n                    <p><strong>Pomodoros Log View Toggle</strong></p>\n                    <button type=\"submit\" value=\"submit\">Save Settings</button>\n                    <p>---</p>\n                </form>\n                <button onClick={this.restoreDefaults}>Restore Defaults</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Header from './Header.js';\nimport Clock from './Clock.js';\nimport TomatoCounter from './TomatoCounter.js';\nimport Settings from './Settings.js';\nimport uuid from 'uuid';\nimport { analogWatch, schoolBell, shipBell, templeBell } from './assets/alarm-sounds.js';\nimport { withCookies } from 'react-cookie';\n\nimport './styles/css/main.css';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    const { cookies } = props;\n\n    this.alarmSounds = [\n      {\n        name: 'School Bell',\n        url: schoolBell,\n        id: uuid()\n      },\n      {\n        name: 'Ship Bell',\n        url: shipBell,\n        id: uuid()\n      },\n      {\n        name: 'Temple Bell',\n        url: templeBell,\n        id: uuid()\n      },\n      {\n        name: 'Analog Watch',\n        url: analogWatch,\n        id: uuid()\n      }\n    ]\n\n    this.defaultSettings = {\n      pomodoroTimeLengthMinutes: 25,\n      longBreakTimeLengthMinutes: 10,\n      shortBreakTimeLengthMinutes: 5,\n\n      alarmSoundUrl: '/static/media/ship-bell.be4257c1.mp3',\n      alarmVolumePercent: 25,\n\n      browserNotification: true,\n\n      autoStartSegments: false,\n\n      logViewPomodorosOnly: false,\n      logListView: true,\n      logDescendingList: true\n    }\n\n    this.defaultClock = {\n      startSeconds: 1500,\n      timerType: 'pomodoro'\n    }\n\n    this.state = {\n      timeElements: cookies.get('timeElements') || [\n        // no default time Elements. The user hasnt completed any yet.\n      ],\n      settings: cookies.get('settings') || {\n        ...this.defaultSettings\n      },\n      clock: cookies.get('currentClockState') || {\n        ...this.defaultClock\n      }\n    }\n  }\n\n  finishTimer = (timerType, secondsCompleted) => {\n\n    var newTimeElement = {\n      isTomato: (timerType === 'pomodoro'),\n      minutes: (secondsCompleted / 60),\n      id: uuid()\n    }\n\n    this.setState({\n      timeElements: [...this.state.timeElements, newTimeElement]\n    }, () => {\n      this.setElementsCookie();\n    })\n\n    var audio = document.getElementById(\"alarm-audio\");\n    audio.play();\n\n  }\n\n  deleteElement = (id) => {\n\n    var newArray = this.state.timeElements.filter((element) => {\n      return element.id !== id;\n    })\n\n    this.setState({\n      timeElements: newArray\n    }, () => {\n      this.setElementsCookie();\n    })  \n  }\n\n  getExpDate = () => {\n    var currentDate = new Date();\n    var year = currentDate.getFullYear()\n    var month = currentDate.getMonth()\n    var day = currentDate.getDate();\n    var hours = currentDate.getHours();\n    var minutes = currentDate.getMinutes();\n    var expDate = new Date(year, month + 1, day, hours, minutes)\n    return expDate;\n  }\n\n  setElementsCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('timeElements', this.state.timeElements, { path: '/', expires: this.getExpDate()});\n  }\n\n  clearElementsCookie = () => {\n    this.setState({\n      timeElements: []\n    }, () => {\n      this.setElementsCookie();\n    })\n  }\n\n  updateSettings = (returnedSettings) => {\n\n    var newClockStartSeconds;\n    if (this.state.clock.timerType === 'pomodoro') {\n      newClockStartSeconds = returnedSettings.pomodoroTimeLengthMinutes*60;\n    } else if (this.state.clock.timerType === 'short-break') {\n      newClockStartSeconds = returnedSettings.shortBreakTimeLengthMinutes*60;\n    } else if (this.state.clock.timerType === 'long-break') {\n      newClockStartSeconds = returnedSettings.longBreakTimeLengthMinutes*60;\n    }\n\n    this.setState({\n      settings: {\n        ...returnedSettings\n      },\n      clock: {\n        startSeconds: newClockStartSeconds,\n        timerType: this.state.clock.timerType\n      }\n    }, () => {\n      this.setSettingsCookie();\n      this.setCurrentClockCookie();\n    })\n  }\n\n  setCurrentClockCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('currentClockState', this.state.clock, { path: '/', expires: this.getExpDate()})\n  }\n\n  setSettingsCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('settings', this.state.settings, { path: '/', expires: this.getExpDate()});\n  }\n\n  clearSettingsCookie = () => {\n    this.setState({\n      settings: {\n        ...this.defaultSettings\n      }\n    }, () => {\n      this.setSettingsCookie();\n    })\n  }\n\n  restoreCurrentClockCookie = () => {\n    this.setState({\n      clock: {\n        ...this.defaultClock\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n    })\n  }\n\n  changeClockFromVars = (newLength, timerType) => {\n    this.setState({\n      clock: {\n        startSeconds: newLength,\n        timerType: timerType\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n    })\n  }\n\n  componentDidMount = () => {\n\n    this.setState({\n      clock: {\n        startSeconds: this.state.settings.pomodoroTimeLengthMinutes*60,\n        timerType: 'pomodoro'\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n    })\n\n    var audio = document.getElementById(\"alarm-audio\");\n    audio.volume = this.state.settings.alarmVolumePercent/100;\n\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n          <Clock startSeconds={this.state.clock.startSeconds} timerType={this.state.clock.timerType} passVarsUp={this.changeClockFromVars} finishTimer={this.finishTimer} pomodoroTimeLengthSeconds={this.state.settings.pomodoroTimeLengthMinutes*60} shortBreakTimeLengthSeconds={this.state.settings.shortBreakTimeLengthMinutes*60} longBreakTimeLengthSeconds={this.state.settings.longBreakTimeLengthMinutes*60}/>\n          <hr/>\n          <TomatoCounter timeElements={this.state.timeElements} deleteElement={this.deleteElement} clearElementsCookie={this.clearElementsCookie}/>\n          <hr/>\n          <Settings alarmSounds={this.alarmSounds} defaultSettings={this.defaultSettings} settings={this.state.settings} updateSettings={this.updateSettings} clearSettingsCookie={this.clearSettingsCookie} restoreCurrentClockCookie={this.restoreCurrentClockCookie}/>\n          <audio id=\"alarm-audio\" src={this.state.settings.alarmSoundUrl} type=\"audio/mpeg\" />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default withCookies(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n    <CookiesProvider>\n        <App />\n    </CookiesProvider>\n    \n, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}