{"version":3,"sources":["assets/analog-watch.mp3","assets/school-bell.mp3","assets/ship-bell.mp3","assets/temple-bell.mp3","Header.js","ClockChanger.js","Clock.js","CommentSection.js","TomatoCounter.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","style","borderColor","ClockChanger","onClick","this","changeClock","bind","pomodoroTimeLengthSeconds","shortBreakTimeLengthSeconds","longBreakTimeLengthSeconds","Component","Clock","displayMessage","message","state","isRunning","timerType","startSeconds","secondsElapsed","newLength","newTimerType","passVarsUp","updateClockState","resetClock","clockState","setState","startClock","timeStarted","Date","timerID","setInterval","tick","stopClock","clearInterval","changeTitle","finishTimer","showTimeInTitle","document","title","fomattedTime","formatSeconds","skipToEnd","origSec","hours","Math","floor","minutes","seconds","clockStyle","demonstrationStyle","marginTop","display","padding","border","margin","CommentSection","submitComment","editLogComment","comment","editingComment","udpateCommentState","event","target","value","openCommentToEdit","commentSection","placeholder","onChange","TomatoCounter","id","tomatoCount","breakCount","index","timeElements","length","isTomato","elementsArray","map","element","className","key","deleteElement","textAlign","dateCompleted","clearElementsCookie","Settings","setting","name","parseInt","onSubmit","preventDefault","updateSettings","restoreDefaults","defaultSettings","clearSettingsCookie","restoreCurrentClockCookie","settings","alarmOptions","alarmSounds","option","url","type","pomodoroTimeLengthMinutes","shortBreakTimeLengthMinutes","longBreakTimeLengthMinutes","alarmSoundUrl","alarmVolumePercent","App","createTimeElement","secondsCompleted","minutesStrt","getMinutes","hoursStrt","getHours","amOrPmStrt","formattedTimeStarted","dateFin","minutesFin","hoursFin","monthFin","getUTCMonth","dayFin","getUTCDate","yearFin","getUTCFullYear","amOrPmFin","formattedDateCompleted","formattedTimeCompleted","uuid","timeCompleted","startedWhen","newTimeElement","setElementsCookie","getElementById","play","newArray","filter","getExpDate","currentDate","year","getFullYear","month","getMonth","day","getDate","cookies","set","path","expires","returnedSettings","newClockStartSeconds","clock","setSettingsCookie","setCurrentClockCookie","defaultClock","changeClockFromVars","i","newTimeElementsArr","componentDidMount","volume","schoolBell","shipBell","templeBell","analogWatch","browserNotification","autoStartSegments","logViewPomodorosOnly","logListView","logDescendingList","get","src","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e50354af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/analog-watch.3fe4eb29.mp3\";","module.exports = __webpack_public_path__ + \"static/media/school-bell.05ba0837.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ship-bell.be4257c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/temple-bell.63544226.mp3\";","import React from 'react';\n\nexport default function Header(props) {\n    return (\n        <div>\n            <h1>Tomato Timer</h1>\n            <hr style={{borderColor: 'dodgerblue'}}/>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class ClockChanger extends Component {\n\n    render() {\n\n        return (\n            <div>\n                <button onClick={this.props.changeClock.bind(this, this.props.pomodoroTimeLengthSeconds, 'pomodoro')}>Pomodoro</button>\n                <button onClick={this.props.changeClock.bind(this, this.props.shortBreakTimeLengthSeconds, 'short-break')}>Short Break</button>\n                <button onClick={this.props.changeClock.bind(this, this.props.longBreakTimeLengthSeconds, 'long-break')}>Long Break</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport ClockChanger from './ClockChanger.js';\n\nexport default class Clock extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRunning: false,\n            secondsElapsed: 0,\n            timeStarted: {}\n        };\n    }\n\n    displayMessage = () => {\n        \n        var message = \"\";\n        if (this.state.isRunning === false && this.props.timerType === 'pomodoro' && this.props.startSeconds !== this.state.secondsElapsed) {\n            message = \"Start the clock and get to work!\";\n        } else if (this.state.isRunning === false && this.props.timerType === 'pomodoro' && this.props.startSeconds === this.state.secondsElapsed) {\n            message = \"Good job! You made it to the break. Select whether you are going to take a short or long break.\"\n        } else if (this.state.isRunning === true && this.props.timerType === 'pomodoro') {\n            message = \"You're on the clock, keep focused on the task at hand!\"\n        } else if (this.state.isRunning === false && this.props.timerType !== 'pomodoro' && this.props.startSeconds !== this.state.secondsElapsed) {\n            message = \"Start the clock and take your well earned break!\"\n        } else if (this.state.isRunning === false && this.props.timerType !== 'pomodoro' && this.props.startSeconds === this.state.secondsElapsed) {\n            message = \"Select whether you are headed back to a 'pomodoro' or if you want to take a longer break.\"\n        } else if (this.state.isRunning === true && this.props.timerType !== 'pomodoro') {\n            message = \"You're on your break. Get up, stretch, grab a snack or water if needed and relax!\"\n        }\n\n        return <p>{message}</p>\n    }\n\n    changeClock = (newLength, newTimerType) => {\n\n        this.props.passVarsUp(newLength, newTimerType);\n        \n        this.updateClockState(false);\n        \n        this.resetClock();\n\n    }\n\n    updateClockState = (clockState) => {\n        this.setState({\n            isRunning: clockState\n        })\n    }\n        \n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n\n    startClock = () => {\n        \n        if (!this.state.isRunning) {\n            \n            if (this.props.startSeconds === this.state.secondsElapsed) {\n                this.resetClock();\n            }\n\n            if (this.state.secondsElapsed === 0 || this.state.secondsElapsed - this.props.startSeconds === 0) {\n                this.setState({\n                    timeStarted: new Date()\n                })\n            }\n            \n            this.updateClockState(true);\n            this.timerID = setInterval(\n                () => this.tick(),\n                1000\n            );\n        }\n\n    }\n\n    stopClock = () => {\n        this.updateClockState(false);\n        clearInterval(this.timerID);\n    }\n\n    resetClock = () => {\n        this.stopClock();\n        this.changeTitle(false);\n        this.setState({\n            secondsElapsed: 0,\n            timeStarted: {}\n        });\n    }\n\n    tick = () => {\n        this.setState({\n            secondsElapsed: (this.state.secondsElapsed + 1)\n        })\n\n        this.changeTitle(true);\n\n        if (this.state.secondsElapsed === this.props.startSeconds) {\n            this.stopClock();\n            this.props.finishTimer(this.props.timerType, this.props.startSeconds, this.state.timeStarted);\n        }\n    }\n\n    changeTitle = (showTimeInTitle) => {\n        var title = 'Pomodoro';\n\n        if (showTimeInTitle === false) {\n            document.title = title;\n        } else {\n            var fomattedTime = this.formatSeconds(this.props.startSeconds - this.state.secondsElapsed);\n            document.title = `${title} (${fomattedTime})`;\n        }\n    }\n\n    skipToEnd = () => {\n        this.setState({\n            secondsElapsed: (this.props.startSeconds - 2)\n        }, () => {\n            if (!this.state.isRunning)\n                this.startClock()\n        })\n    }\n\n    formatSeconds = (origSec) => {\n        var hours   = Math.floor(origSec / 3600);\n        var minutes = Math.floor((origSec - (hours * 3600)) / 60);\n        var seconds = origSec - (hours * 3600) - (minutes * 60);\n\n        if (hours < 10) {\n            hours = `0${hours}:`\n            if (hours === '00:') {\n                hours = '';\n            }\n        }\n        if (minutes < 10) {\n            minutes = `0${minutes}`;\n        }\n        if (seconds < 10) {\n            seconds = `0${seconds}`;\n        }\n        return `${hours}${minutes}:${seconds}`;\n    }\n    \n\n    render() {\n\n        return (\n            <div>\n                {this.displayMessage()}\n                \n                <ClockChanger changeClock={this.changeClock} pomodoroTimeLengthSeconds={this.props.pomodoroTimeLengthSeconds} shortBreakTimeLengthSeconds={this.props.shortBreakTimeLengthSeconds} longBreakTimeLengthSeconds={this.props.longBreakTimeLengthSeconds}/>\n                \n                \n\n                <h2 style={clockStyle}>{this.formatSeconds(this.props.startSeconds - this.state.secondsElapsed)}</h2>\n                \n                <div>\n                    <button onClick={this.startClock}>Start</button>\n                    <button onClick={this.stopClock}>Stop</button>\n                    <button onClick={this.resetClock}>Reset</button>\n                </div>\n\n                <div style={demonstrationStyle}>\n                    <p style={{marginTop: 0}}>For demonstration purposes, feel free to skip to the end of the timer:</p>\n                    <button onClick={this.skipToEnd}>Skip to end of Timer</button>\n                </div>\n                \n\n            </div>\n        )\n    }\n}\n\nconst clockStyle = {\n    display: 'inline-block',\n    padding: '1rem',\n    border: '1px solid red'\n}\n\nconst demonstrationStyle = {\n    border: '1px dotted grey',\n    padding: '1rem',\n    margin: '1rem 0'\n}","import React, { Component } from 'react'\n\nexport default class CommentSection extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editingComment: this.props.editingComment,\n            comment: this.props.comment\n        }\n    }\n\n    submitComment = () => {\n        this.props.editLogComment(this.state.comment);\n        this.setState({\n            editingComment: false\n        });\n    }\n\n    udpateCommentState = (event) => {\n        this.setState({\n            comment: event.target.value\n        })\n    }\n\n    openCommentToEdit = () => {\n        this.setState({\n            editingComment: true\n        })\n    }\n\n    render() {\n\n        var commentSection;\n        if (this.state.editingComment === true) {\n            commentSection = \n            <div>\n                <textarea placeholder={'add comments about how you spent your time'} value={this.state.comment} onChange={this.udpateCommentState}></textarea>\n                <button onClick={this.submitComment}>Submit</button>\n            </div>\n        } else {\n            commentSection = \n            <div>\n                <p>{this.props.comment}</p>\n                <button onClick={this.openCommentToEdit}>Edit Comment</button>\n            </div>\n        }\n\n        return (\n            <div>\n                {commentSection}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport CommentSection from './CommentSection.js';\n\nexport default class TomatoCounter extends Component {\n\n    editLogComment = (id, comment) => {\n        this.props.editLogComment(id, comment);\n    }\n\n    render() {\n\n        var tomatoCount = 0;\n        var breakCount = 0;\n        for (let index = 0; index < this.props.timeElements.length; index++) {\n            if (this.props.timeElements[index].isTomato) {\n                tomatoCount++\n            } else {\n                breakCount++\n            }\n        }\n\n        var elementsArray = this.props.timeElements.map((element) => {\n\n            return (\n                <div className=\"row\" key={element.id}>\n                    <div>\n                        <button onClick={this.props.deleteElement.bind(this, element.id)} className=\"rm-button\">x</button>\n                    </div>\n                    <div className={`time-element ${element.isTomato ? 'tomato' : 'break'}`}>\n                        <div>\n                            <p style={{textAlign: 'center'}}>{element.minutes}<br/>\n                            minutes\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"log-info\">\n                        <p>Time Started: {element.timeStarted}</p>\n                        <p>Time Completed: {element.timeStarted}</p>\n                        <p>Date Completed: {element.dateCompleted}</p>\n                    </div>\n                    <div>\n                        <CommentSection comment={element.comment} editingComment={element.editingComment} editLogComment={this.editLogComment.bind(this, element.id)}/>\n                    </div>\n                </div>\n            )\n        })\n\n        return (\n\n            <div>\n                <h2>Completed Time Segments</h2>\n                <p>This section acts as a log of the pomodoros and break that you have completed.</p>\n                <p>So far, you have {tomatoCount} tomatoes completed and have taken {breakCount} beaks.</p>\n                <div className=\"time-elements-wrapper\">\n                    {elementsArray}\n                </div>\n                <button onClick={this.props.clearElementsCookie}>Clear Log</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...props.settings\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange = (event) => {\n\n        var setting = event.target.name;\n        var value;\n        \n        if (parseInt(event.target.value)) {\n            value = parseInt(event.target.value);\n        } else {\n            value = event.target.value;\n        }\n\n        this.setState({\n            [setting]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.updateSettings(this.state);\n    }\n\n    restoreDefaults = () => {\n        this.setState({\n            ...this.props.defaultSettings\n        }, () => {\n            this.props.clearSettingsCookie();\n            this.props.restoreCurrentClockCookie();\n        })\n    }\n\n\n\n    render() {\n\n        var alarmOptions = this.props.alarmSounds.map((option) => {\n            return <option key={option.id} value={option.url}>{option.name}</option>\n        })\n\n        return (\n            <div>\n                <h2>SETTINGS</h2>\n                <form onSubmit={this.onSubmit} id=\"settings\" >\n                    <p><strong>Custom Timer Times</strong></p>\n                    <div>\n                        <p>Pomodoro Time:</p>\n                        <input type=\"number\" name=\"pomodoroTimeLengthMinutes\" value={this.state.pomodoroTimeLengthMinutes} onChange={this.onChange} />\n                        <p>Short Break Time:</p>\n                        <input type=\"number\" name=\"shortBreakTimeLengthMinutes\" value={this.state.shortBreakTimeLengthMinutes} onChange={this.onChange}/>\n                        <p>Long Break Time:</p>\n                        <input type=\"number\" name=\"longBreakTimeLengthMinutes\" value={this.state.longBreakTimeLengthMinutes} onChange={this.onChange}/>\n                    </div>\n                    <p>---</p>\n                    <p><strong>Sound Picker</strong></p>\n                    <select name=\"alarmSoundUrl\" onChange={this.onChange} value={this.state.alarmSoundUrl}>\n                        {alarmOptions}\n                    </select>\n                    <p>---</p>\n                    <p><strong>Adjust Volume</strong></p>\n                    <select name=\"alarmVolumePercent\" onChange={this.onChange} value={this.state.alarmVolumePercent}>\n                        <option value=\"100\">100%</option>\n                        <option value=\"75\">75%</option>\n                        <option value=\"50\">50%</option>\n                        <option value=\"25\">25%</option>\n                    </select>\n                    <p>---</p>\n                    <p><strong>Browser Notification</strong></p>\n                    <p>---</p>\n                    <p><strong>Auto Start Pomodoros and Breaks</strong></p>\n                    <p>---</p>\n                    <p><strong>Pomodoros Log View Toggle</strong></p>\n                    <button type=\"submit\" value=\"submit\">Save Settings</button>\n                    <p>---</p>\n                </form>\n                <button onClick={this.restoreDefaults}>Restore Defaults</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Header from './Header.js';\nimport Clock from './Clock.js';\nimport TomatoCounter from './TomatoCounter.js';\nimport Settings from './Settings.js';\nimport uuid from 'uuid';\nimport { analogWatch, schoolBell, shipBell, templeBell } from './assets/alarm-sounds.js';\nimport { withCookies } from 'react-cookie';\n\nimport './styles/css/main.css';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    const { cookies } = props;\n\n    this.alarmSounds = [\n      {\n        name: 'School Bell',\n        url: schoolBell,\n        id: uuid()\n      },\n      {\n        name: 'Ship Bell',\n        url: shipBell,\n        id: uuid()\n      },\n      {\n        name: 'Temple Bell',\n        url: templeBell,\n        id: uuid()\n      },\n      {\n        name: 'Analog Watch',\n        url: analogWatch,\n        id: uuid()\n      }\n    ]\n\n    this.defaultSettings = {\n      pomodoroTimeLengthMinutes: 25,\n      longBreakTimeLengthMinutes: 10,\n      shortBreakTimeLengthMinutes: 5,\n\n      alarmSoundUrl: '/static/media/ship-bell.be4257c1.mp3',\n      alarmVolumePercent: 25,\n\n      browserNotification: true,\n\n      autoStartSegments: false,\n\n      logViewPomodorosOnly: false,\n      logListView: true,\n      logDescendingList: true\n    }\n\n    this.defaultClock = {\n      startSeconds: 1500,\n      timerType: 'pomodoro'\n    }\n\n    this.state = {\n      timeElements: cookies.get('timeElements') || [\n        // no default time Elements. The user hasnt completed any yet.\n      ],\n      settings: cookies.get('settings') || {\n        ...this.defaultSettings\n      },\n      clock: cookies.get('currentClockState') || {\n        ...this.defaultClock\n      }\n    }\n  }\n\n  createTimeElement = (timerType, secondsCompleted, timeStarted) => {\n    // formatting time started\n    var minutesStrt = timeStarted.getMinutes();\n    var hoursStrt = timeStarted.getHours();\n\n    var amOrPmStrt = \"\";\n    if (hoursStrt > 12) {\n      hoursStrt = hoursStrt-12;\n      amOrPmStrt = \"PM\";\n    } else if (hoursStrt < 12) {\n      amOrPmStrt = \"AM\";\n    } else if (hoursStrt === 12 ) {\n      amOrPmStrt = \"PM\";\n    }\n\n    var formattedTimeStarted = `${hoursStrt}:${minutesStrt} ${amOrPmStrt}`;\n\n    // formatting time and date completed\n    var dateFin = new Date();\n    var minutesFin = dateFin.getMinutes();\n    var hoursFin = dateFin.getHours();\n    var monthFin = dateFin.getUTCMonth() + 1;\n    var dayFin = dateFin.getUTCDate();\n    var yearFin = dateFin.getUTCFullYear();\n\n    var amOrPmFin = \"\";\n    if (hoursFin > 12) {\n      hoursFin = hoursFin-12;\n      amOrPmFin = \"PM\";\n    } else if (hoursFin < 12) {\n      amOrPmFin = \"AM\";\n    } else if (hoursFin === 12 ) {\n      amOrPmFin = \"PM\";\n    }\n\n    var formattedDateCompleted = `${monthFin}/${dayFin}/${yearFin}`;\n    var formattedTimeCompleted = `${hoursFin}:${minutesFin} ${amOrPmFin}`;\n\n\n    var newTimeElement = {\n      isTomato: (timerType === 'pomodoro'),\n      minutes: (secondsCompleted / 60),\n      id: uuid(),\n      comment: \"\",\n      editingComment: true,\n      timeStarted: formattedTimeStarted,\n      timeCompleted: formattedTimeCompleted,\n      dateCompleted: formattedDateCompleted\n    }\n    return newTimeElement;\n  }\n\n  finishTimer = (timerType, secondsCompleted, startedWhen) => {\n\n    var newTimeElement = this.createTimeElement(timerType, secondsCompleted, startedWhen);\n\n    this.setState({\n      timeElements: [...this.state.timeElements, newTimeElement]\n    }, () => {\n      this.setElementsCookie();\n    })\n\n    var audio = document.getElementById(\"alarm-audio\");\n    audio.play();\n\n  }\n\n  deleteElement = (id) => {\n\n    var newArray = this.state.timeElements.filter((element) => {\n      return element.id !== id;\n    })\n\n    this.setState({\n      timeElements: newArray\n    }, () => {\n      this.setElementsCookie();\n    })  \n  }\n\n  getExpDate = () => {\n    var currentDate = new Date();\n    var year = currentDate.getFullYear()\n    var month = currentDate.getMonth()\n    var day = currentDate.getDate();\n    var hours = currentDate.getHours();\n    var minutes = currentDate.getMinutes();\n    var expDate = new Date(year, month + 1, day, hours, minutes)\n    return expDate;\n  }\n\n  setElementsCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('timeElements', this.state.timeElements, { path: '/', expires: this.getExpDate()});\n  }\n\n  clearElementsCookie = () => {\n    this.setState({\n      timeElements: []\n    }, () => {\n      this.setElementsCookie();\n    })\n  }\n\n  updateSettings = (returnedSettings) => {\n\n    var newClockStartSeconds;\n    if (this.state.clock.timerType === 'pomodoro') {\n      newClockStartSeconds = returnedSettings.pomodoroTimeLengthMinutes*60;\n    } else if (this.state.clock.timerType === 'short-break') {\n      newClockStartSeconds = returnedSettings.shortBreakTimeLengthMinutes*60;\n    } else if (this.state.clock.timerType === 'long-break') {\n      newClockStartSeconds = returnedSettings.longBreakTimeLengthMinutes*60;\n    }\n\n    this.setState({\n      settings: {\n        ...returnedSettings\n      },\n      clock: {\n        startSeconds: newClockStartSeconds,\n        timerType: this.state.clock.timerType\n      }\n    }, () => {\n      this.setSettingsCookie();\n      this.setCurrentClockCookie();\n    })\n  }\n\n  setCurrentClockCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('currentClockState', this.state.clock, { path: '/', expires: this.getExpDate()})\n  }\n\n  setSettingsCookie = () => {\n    const { cookies } = this.props;\n    cookies.set('settings', this.state.settings, { path: '/', expires: this.getExpDate()});\n  }\n\n  clearSettingsCookie = () => {\n    this.setState({\n      settings: {\n        ...this.defaultSettings\n      }\n    }, () => {\n      this.setSettingsCookie();\n    })\n  }\n\n  restoreCurrentClockCookie = () => {\n    this.setState({\n      clock: {\n        ...this.defaultClock\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n    })\n  }\n\n  changeClockFromVars = (newLength, timerType) => {\n    this.setState({\n      clock: {\n        startSeconds: newLength,\n        timerType: timerType\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n    })\n  }\n\n  editLogComment = (id, comment) => {\n    for (let i = 0; i < this.state.timeElements.length; i++) {\n      if (this.state.timeElements[i].id === id) {\n        let newTimeElement = {...this.state.timeElements[i], comment: comment, editingComment: false};\n        let newTimeElementsArr = [...this.state.timeElements];\n        newTimeElementsArr[i] = newTimeElement;\n\n        this.setState({\n          timeElements: [...newTimeElementsArr]\n        }, () => {\n          this.setElementsCookie();\n        })\n        break;\n      }\n    }\n  }\n\n  componentDidMount = () => {\n\n    this.setState({\n      clock: {\n        startSeconds: this.state.settings.pomodoroTimeLengthMinutes*60,\n        timerType: 'pomodoro'\n      }\n    }, () => {\n      this.setCurrentClockCookie();\n    })\n\n    var audio = document.getElementById(\"alarm-audio\");\n    audio.volume = this.state.settings.alarmVolumePercent/100;\n\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n          <Clock startSeconds={this.state.clock.startSeconds} timerType={this.state.clock.timerType} passVarsUp={this.changeClockFromVars} finishTimer={this.finishTimer} pomodoroTimeLengthSeconds={this.state.settings.pomodoroTimeLengthMinutes*60} shortBreakTimeLengthSeconds={this.state.settings.shortBreakTimeLengthMinutes*60} longBreakTimeLengthSeconds={this.state.settings.longBreakTimeLengthMinutes*60}/>\n          <hr/>\n          <TomatoCounter timeElements={this.state.timeElements} deleteElement={this.deleteElement} clearElementsCookie={this.clearElementsCookie} editLogComment={this.editLogComment}/>\n          <hr/>\n          <Settings alarmSounds={this.alarmSounds} defaultSettings={this.defaultSettings} settings={this.state.settings} updateSettings={this.updateSettings} clearSettingsCookie={this.clearSettingsCookie} restoreCurrentClockCookie={this.restoreCurrentClockCookie}/>\n          <audio id=\"alarm-audio\" src={this.state.settings.alarmSoundUrl} type=\"audio/mpeg\" />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default withCookies(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n    <CookiesProvider>\n        <App />\n    </CookiesProvider>\n    \n, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}